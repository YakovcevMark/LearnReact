{"version":3,"file":"static/js/469.8b570f81.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/common/Pagination/Pagination.module.css?82a8","components/common/Pagination/Pagination.js","webpack://react-kabzda-1/./src/components/Users/Users.module.css?b9d0","components/Users/User.jsx","components/Users/Users.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/users_selectors.js","components/Users/UsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Pagination_selectedPage__NOvLO\",\"paginationItem\":\"Pagination_paginationItem__aKkTy\",\"pagination\":\"Pagination_pagination__o72+l\"};","import classes from \"./Pagination.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst Pagination = ({totalItemsCount, pageSize, currentPage, pageChanged, portionSize = 10}) => {\r\n    const pages = [];\r\n    const countOfPages = Math.ceil(totalItemsCount / pageSize);\r\n    for (let i = 1; i <= countOfPages; i++) {\r\n        pages.push(i);\r\n    }\r\n    const portionCount = Math.ceil(countOfPages / portionSize);\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    const rightPortionPageNumber = portionNumber * portionSize;\r\n    return (\r\n        <>\r\n\r\n            <div className={classes.pagination}>\r\n                {portionNumber > 1 &&\r\n                    <button onClick={() => setPortionNumber(portionNumber - 1)}>PREV</button>\r\n                }\r\n                {\r\n                    pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                        .map(p => {\r\n                            return <span key = {p} className={currentPage === p ? classes.selectedPage : classes.paginationItem}\r\n                                         onClick={(e) => {\r\n                                             pageChanged(p);\r\n                                         }}>\r\n                                        {p}\r\n                            </span>\r\n                        })\r\n                }\r\n                {portionCount > portionNumber &&\r\n                    <button onClick={() => setPortionNumber(portionNumber + 1)}>NEXT</button>\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pagination;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Users_item__e4XSI\",\"selectedPage\":\"Users_selectedPage__JXecU\",\"paginationItem\":\"Users_paginationItem__+hTNo\",\"pagination\":\"Users_pagination__DTUA4\"};","import classes from \"./Users.module.css\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPNG from \"../../assets/img/user.png\"\r\n\r\n\r\n\r\nconst User = ({id, followingInProgress, toggleFollowingInProgress, makeFollow, makeUnFollow, status, name, photos, followed, location}) => {\r\n    return (\r\n        <>\r\n            <div className={classes.item}>\r\n                <div>\r\n                    <NavLink to={`/profile/${id}`}>\r\n                        <div>\r\n                            <img src = {photos.small !== null ? photos.small : userPNG} alt=\"\"/>\r\n                        </div>\r\n                    </NavLink>\r\n                    <div>\r\n                        {\r\n                            followed\r\n                                ? <button disabled={followingInProgress.some(userId => userId === id)}\r\n                                          onClick={() => {\r\n                                              toggleFollowingInProgress(true, id);\r\n                                              makeUnFollow(id);\r\n                                          }}>UnFollow</button>\r\n                                : <button disabled={followingInProgress.some(userId => userId === id)}\r\n                                          onClick={() => {\r\n                                              toggleFollowingInProgress(true, id);\r\n                                              makeFollow(id);\r\n                                          }}>Follow</button>}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <div>{name}</div>\r\n                        <div>{status}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div>location.country</div>\r\n                        <div>location.city</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default User;","import React from \"react\";\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\nimport User from \"./User\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\n\r\nconst Users = (props) => {\r\n    return (\r\n        <>\r\n            <Pagination\r\n                totalItemsCount={props.totalUsersCount}\r\n                pageSize={props.pageSize}\r\n                currentPage={props.currentPage}\r\n                pageChanged={props.pageChanged}\r\n            />\r\n            {props.isFetching ? <Preloader/> :\r\n                props.users.map(u => <User\r\n                    key={u.id}\r\n                    id={u.id}\r\n                    photos={u.photos}\r\n                    followed={u.followed}\r\n                    followingInProgress={props.followingInProgress}\r\n                    toggleFollowingInProgress={props.toggleFollowingInProgress}\r\n                    makeUnFollow={props.makeUnFollow}\r\n                    makeFollow={props.makeFollow}\r\n                    name={u.name}\r\n                    status={u.status}\r\n                    location={u.location}\r\n                />)}\r\n        </>\r\n    )\r\n}\r\nexport default Users;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import {createSelector} from \"reselect\";\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n  return users;\r\n})\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import {\r\n    getUsersRequest, makeFollow, makeUnFollow,\r\n    setCurrentPage,\r\n    toggleFollowingInProgress,\r\n} from \"../../redux/users_page_reducer\";\r\nimport Users from \"./Users\";\r\nimport React, {useEffect} from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users_selectors\";\r\n\r\nconst UsersContainer = ({getUsersRequest, pageSize, currentPage, setCurrentPage, isFetching, totalUsersCount, users, followingInProgress, toggleFollowingInProgress, makeFollow, makeUnFollow}) => {\r\n    useEffect(() => {\r\n        getUsersRequest(pageSize, currentPage);\r\n\r\n    }, [currentPage, getUsersRequest, pageSize])\r\n\r\n    function onPageChanged(numberOfPage) {\r\n        setCurrentPage(numberOfPage);\r\n        getUsersRequest(pageSize, numberOfPage)\r\n    }\r\n\r\n\r\n    return <>\r\n        <Users\r\n            currentPage={currentPage}\r\n            totalUsersCount={totalUsersCount}\r\n            pageSize={pageSize}\r\n            users={users}\r\n            followingInProgress={followingInProgress}\r\n            toggleFollowingInProgress={toggleFollowingInProgress}\r\n            makeFollow={makeFollow}\r\n            makeUnFollow={makeUnFollow}\r\n            pageChanged={onPageChanged}\r\n            isFetching={isFetching}\r\n        />\r\n    </>\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isFetching: getIsFetching(state),\r\n    users: getUsers(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    pageSize: getPageSize(state),\r\n    currentPage: getCurrentPage(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n})\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            setCurrentPage, toggleFollowingInProgress,\r\n            getUsersRequest, makeFollow, makeUnFollow\r\n        })\r\n)(UsersContainer)\r\n"],"names":["_ref","totalItemsCount","pageSize","currentPage","pageChanged","_ref$portionSize","portionSize","pages","countOfPages","Math","ceil","i","push","portionCount","_useState","useState","_useState2","_slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","_jsx","_Fragment","children","_jsxs","className","classes","onClick","filter","p","map","e","id","followingInProgress","toggleFollowingInProgress","makeFollow","makeUnFollow","status","name","photos","followed","location","NavLink","to","concat","src","small","userPNG","alt","disabled","some","userId","props","Pagination","totalUsersCount","isFetching","Preloader","users","u","User","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","Array","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","Error","_directlyPassedOption2","finalMemoizeOptions","isArray","dependencies","every","dep","dependencyTypes","join","getDependencies","memoizedResultFunc","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","createSelector","getIsFetching","state","usersPage","getUsers","getTotalUsersCount","getPageSize","getCurrentPage","getFollowingInProgress","compose","connect","setCurrentPage","getUsersRequest","useEffect","Users","numberOfPage"],"sourceRoot":""}