{"version":3,"file":"static/js/517.53a790a5.chunk.js","mappings":"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","sources":["components/Hocs/withAuthNavigateComponent/withAuthNavigate.js","components/Profile/Profile.module.css","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/Contact.jsx","components/common/FormControls/ProfileUpdateForm.js","components/Profile/ProfileInfo/CurrentProfileInfo.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/common/FormControls/AddNewPostForm.js","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","redux/profile_selectors.js","components/Profile/ProfileContainer.js"],"sourcesContent":["import React from \"react\"\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport const withAuthNavigate = (Component) => {\r\n    const ComponentWithAuthNavigate = (props) => {\r\n        if(!props.isAuth && !props.router.params.userId) return <Navigate to=\"/login/\"/>\r\n        return <Component {...props}/>\r\n    }\r\n    return connect(mapStateToProps,null)(ComponentWithAuthNavigate);\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Profile_item__Qme6a\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ProfileInfo_item__UhPF7\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ukqO1\",\"profilePhoto\":\"ProfileInfo_profilePhoto__8qIHy\",\"contact\":\"ProfileInfo_contact__baEhB\"};","import React, {useEffect, useState} from 'react'\r\n\r\nconst ProfileStatus = ({isOwner, status, updateProfileStatusRequest }) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [localStatus, setLocalStatus] = useState(status);\r\n\r\n    useEffect(() => {\r\n        setLocalStatus(status);\r\n    }, [status])\r\n\r\n    const onTitleChanged = (e) => {\r\n        setLocalStatus(e.target.value);\r\n    }\r\n    const toggleEditMode = () => {\r\n        setEditMode(!editMode);\r\n    }\r\n    const onUpdateProfileStatus = () => {\r\n        toggleEditMode();\r\n        if (status !== localStatus)\r\n            updateProfileStatusRequest(localStatus)\r\n    }\r\n    return <div>\r\n        {editMode && isOwner\r\n            ? <div>\r\n                <input autoFocus={true}\r\n                       onBlur={onUpdateProfileStatus}\r\n                       value={localStatus}\r\n                       onChange={onTitleChanged}>\r\n                </input>\r\n            </div>\r\n            : <div>\r\n                      <span onDoubleClick={toggleEditMode}>\r\n                          {localStatus || \"Update status\"}\r\n                      </span>\r\n            </div>\r\n        }\r\n    </div>\r\n\r\n}\r\n\r\nexport default ProfileStatus;","import classes from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Contact = ({contactName, contactValue}) => {\r\n    return <div className={classes.contact}><b>{contactName}</b>: <a href={`_${contactValue}`}></a></div>\r\n}\r\nexport default Contact;","import userLocalPhoto from \"../../../assets/img/user.png\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport classes from \"../../Profile/ProfileInfo/ProfileInfo.module.css\";\r\nimport ProfileStatus from \"../../Profile/ProfileInfo/ProfileStatus\";\r\nimport React from \"react\";\r\nimport Contact from \"../../Profile/ProfileInfo/Contact\";\r\n\r\nconst ProfileUpdateForm = ({\r\n                               savePhoto,\r\n                               profileInfo,\r\n                               status,\r\n                               updateProfileStatusRequest,\r\n                               onSubmit\r\n                           }) => {\r\n    function onSavePhoto(e) {\r\n        if (e.currentTarget.files[0])\r\n            savePhoto(e.currentTarget.files[0]);\r\n    }\r\n\r\n    const profilePhoto = profileInfo.photos.large || userLocalPhoto;\r\n    return (\r\n        <Formik\r\n            initialValues={{...profileInfo}}\r\n            onSubmit={(values,\r\n                       {setSubmitting, setErrors}) => {\r\n                // onSubmit(values.newMessageBody)\r\n                onSubmit(values, setErrors);\r\n            }\r\n            }\r\n        >\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n\r\n              }) => (\r\n                <Form>\r\n                    <button type=\"submit\">\r\n                        Save\r\n                    </button>\r\n                    <div>\r\n                        {errors.apiError &&\r\n                            <span>{errors.apiError}</span>}\r\n                    </div>\r\n                    <div className={classes.profilePhoto}>\r\n                        <img src={profilePhoto} alt=\"\"/>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"file\" onChange={onSavePhoto}/>\r\n                    </div>\r\n                    <div>\r\n                        <div></div>\r\n                        <b>FullName:</b>\r\n\r\n                        <Field\r\n                            name=\"fullName\"\r\n                            component=\"input\"\r\n                            placeholder=\"Enter ur full name\"\r\n                            value={values.fullName}\r\n                            // validate={validateMessage}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <b>Status:</b> Note: double click for change status\r\n                        <ProfileStatus\r\n                            isOwner={true}\r\n                            status={status}\r\n                            updateProfileStatusRequest={updateProfileStatusRequest}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <div><b>aboutMe:</b></div>\r\n                        <Field\r\n                            name=\"aboutMe\"\r\n                            component=\"textarea\"\r\n                            placeholder=\"Write something about you\"\r\n                            value={values.aboutMe}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <div><b>Ищет работу?</b></div>\r\n                        <Field\r\n                            name=\"lookingForAJob\"\r\n                            component=\"input\"\r\n                            type=\"checkbox\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <div><b>lookingForAJobDescription</b></div>\r\n                        <Field\r\n                            name=\"lookingForAJobDescription\"\r\n                            component=\"textarea\"\r\n                            placeholder=\"Please, can you tell something about your last job?\"\r\n                            value={values.lookingForAJobDescription}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <b>Contacts:</b>\r\n                        {Object.keys(profileInfo.contacts).map(key => {\r\n                            return <><Contact key={key}\r\n                                              contactName={key}\r\n                                              contactValue={profileInfo.contacts[key]}\r\n                            />\r\n                                <Field\r\n                                    name={key}\r\n                                    component=\"input\"\r\n                                    placeholder={`Write your ${key}`}\r\n                                    value={values.contacts.key}\r\n                                />\r\n                            </>\r\n\r\n                        })}\r\n                    </div>\r\n                    {/*<div className={classes.formControl + \" \"*/}\r\n                    {/*    + (touched.newMessageBody && errors.newMessageBody ?*/}\r\n                    {/*        classes.error : \"\")}>*/}\r\n                    {/*    <Field*/}\r\n                    {/*        name=\"newMessageBody\"*/}\r\n                    {/*        component=\"textarea\"*/}\r\n                    {/*        placeholder=\"Write new message..\"*/}\r\n                    {/*        value={values.newMessageBody}*/}\r\n                    {/*        // validate={validateMessage}*/}\r\n                    {/*    />*/}\r\n                    {/*    <div>*/}\r\n                    {/*        {touched.newMessageBody && errors.newMessageBody &&*/}\r\n                    {/*            <span>{errors.newMessageBody}</span>}*/}\r\n                    {/*    </div>*/}\r\n                    {/*</div>*/}\r\n\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\nexport default ProfileUpdateForm;","import userLocalPhoto from \"../../../assets/img/user.png\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport React from \"react\";\r\nimport Contact from \"./Contact\";\r\n\r\nconst CurrentProfileInfo = ({\r\n                                isOwner,\r\n                                savePhoto,\r\n                                profileInfo,\r\n                                status,\r\n                                updateProfileStatusRequest\r\n                            }) => {\r\n    function onSavePhoto(e) {\r\n        if (e.currentTarget.files[0])\r\n            savePhoto(e.currentTarget.files[0]);\r\n    }\r\n\r\n    const profilePhoto = profileInfo.photos.large || userLocalPhoto;\r\n    return <>\r\n        <div className={classes.profilePhoto}>\r\n            <img src={profilePhoto} alt=\"\"/>\r\n        </div>\r\n        <div>\r\n            {isOwner && <input type=\"file\" onChange={onSavePhoto}/>}\r\n        </div>\r\n        <div>\r\n            <b>FullName:</b> {profileInfo.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Status:</b>\r\n            <ProfileStatus\r\n                isOwner={isOwner}\r\n                status={status}\r\n                updateProfileStatusRequest={updateProfileStatusRequest}\r\n            />\r\n        </div>\r\n        <div>\r\n            <div><b>aboutMe:</b></div>\r\n            {profileInfo.aboutMe}\r\n        </div>\r\n        <div>\r\n            <div><b>Ищет работу?</b></div>\r\n            {profileInfo.lookingForAJob ? \"да\" : \"нет\"}\r\n        </div>\r\n        <div>\r\n            <div><b>lookingForAJobDescription:</b></div>\r\n            {profileInfo.lookingForAJobDescription}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b>\r\n            {Object.keys(profileInfo.contacts).map(key => {\r\n                return <Contact key={key}\r\n                                contactName={key}\r\n                                contactValue={profileInfo.contacts[key]}\r\n                />\r\n            })}\r\n        </div>\r\n    </>\r\n}\r\nexport default CurrentProfileInfo;","import React, {useState} from \"react\";\r\nimport ProfileUpdateForm from \"../../common/FormControls/ProfileUpdateForm\";\r\nimport CurrentProfileInfo from \"./CurrentProfileInfo\";\r\n\r\n\r\nconst ProfileInfo = ({\r\n                         isOwner,\r\n                         savePhoto,\r\n                         profileInfo,\r\n                         status,\r\n                         getProfileStatusRequest,\r\n                         updateProfileRequest,\r\n                         updateProfileStatusRequest,\r\n                     }) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    function updateProfile(requestData, setErrors) {\r\n        updateProfileRequest(requestData, setErrors);\r\n        setEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isOwner && !editMode && <button onClick={() => setEditMode(!editMode)}>Update Profile</button>}\r\n            {editMode\r\n                ? <ProfileUpdateForm savePhoto={savePhoto}\r\n                                     profileInfo={profileInfo}\r\n                                     status={status}\r\n                                     onSubmit={updateProfile}\r\n                                     updateProfileStatusRequest={updateProfileStatusRequest}\r\n                />\r\n                : <CurrentProfileInfo isOwner={isOwner}\r\n                                      savePhoto={savePhoto}\r\n                                      profileInfo={profileInfo}\r\n                                      status={status}\r\n                                      updateProfileStatusRequest={updateProfileStatusRequest}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__pG9r-\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__MdIw3\"};","import classes from './Post.module.css';\r\n\r\nconst Post = ({message, likesCount, deletePost, id}) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img\r\n                src=\"https://n1s2.hsmedia.ru/6a/46/ae/6a46aeed947a183d67d1bc48211151bf/480x496_0xac120003_4430520541578509619.jpg\"\r\n                alt=\"\"/>\r\n            {message}\r\n            <div>\r\n                <span>like {likesCount}</span>\r\n                <button onClick={() => deletePost(id)}>Delete post</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import {Field, Form, Formik} from \"formik\";\r\nimport classes from \"./FormControls.module.css\"\r\nimport React from \"react\";\r\nfunction validatePostText(value){\r\n    let error;\r\n    if(value.length > 30) error = \"Max length is 30 symbols\";\r\n    return error;\r\n\r\n}\r\nexport const AddNewPostForm = ({onSubmit}) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{newPostBody: \"\"}}\r\n            onSubmit={(values,\r\n                       {setSubmitting}) => {\r\n                onSubmit(values.newPostBody)\r\n                values.newPostBody = '';\r\n            }\r\n            }\r\n        >\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n\r\n              }) => (\r\n                <Form>\r\n                    <div className={classes.formControl + \" \"\r\n                        + (touched.newPostBody && errors.newPostBody ?\r\n                            classes.error : \"\")}>\r\n                        <Field\r\n                            name=\"newPostBody\"\r\n                            component=\"textarea\"\r\n                            placeholder=\"Enter net post text...\"\r\n                            value={values.newPostBody}\r\n                            validate={validatePostText}\r\n                        />\r\n\r\n                        <div>\r\n                            {touched.newPostBody && errors.newPostBody &&\r\n                                <span>{errors.newPostBody}</span>}\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"submit\">\r\n                        Add post\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}","import classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport React from \"react\";\r\nimport {AddNewPostForm} from \"../../common/FormControls/AddNewPostForm\";\r\n\r\n\r\nconst MyPosts = ({postsData, deletePost, addPost}) => {\r\n    const postElements = postsData\r\n        .map(p => <Post\r\n            key={p.id}\r\n            id={p.id}\r\n            message={p.message}\r\n            likesCount={p.likesCount}\r\n            deletePost={deletePost}\r\n        />)\r\n\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n\r\n            <div>\r\n                <AddNewPostForm onSubmit={addPost}/>\r\n            </div>\r\n\r\n            <div className={classes.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import {addPost, deletePost} from \"../../../redux/profile_page_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport React from 'react'\r\n\r\n\r\nconst MyPostsContainer = (props) => {\r\n    return (\r\n        <MyPosts\r\n            {...props}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    postsData: state.profilePage.postsData\r\n})\r\n\r\nexport default connect(mapStateToProps, {addPost, deletePost})(MyPostsContainer)","import classes from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={classes.content}>\r\n                 <ProfileInfo\r\n                    isOwner={props.isOwner}\r\n                    savePhoto = {props.savePhoto}\r\n                    profileInfo={props.profileInfo}\r\n                    status={props.status}\r\n                    getProfileStatusRequest={props.getProfileStatusRequest}\r\n                    updateProfileStatusRequest={props.updateProfileStatusRequest}\r\n                    router={props.router}\r\n                    updateProfileRequest={props.updateProfileRequest}\r\n                />}\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","export const getProfileInfo = (state) => {\r\n    return state.profilePage.profileInfo;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.profilePage.isFetching;\r\n}\r\nexport const getStatus = (state) => {\r\n    return state.profilePage.status;\r\n}\r\nexport const getUserId = (state) => {\r\n    return state.auth.id;\r\n}","import React, {useEffect} from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getProfileInfoRequest,\r\n    getProfileStatusRequest, savePhoto, updateProfileRequest,\r\n    updateProfileStatusRequest\r\n} from \"../../redux/profile_page_reducer\";\r\nimport withRouter from \"../Hocs/WithRouterComponent/WithRouterFunction\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthNavigate} from \"../Hocs/withAuthNavigateComponent/withAuthNavigate\";\r\nimport {getIsFetching, getProfileInfo, getStatus, getUserId} from \"../../redux/profile_selectors\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\n\r\nconst ProfileContainer = ({\r\n                              router,\r\n                              sessionUserId,\r\n                              getProfileInfoRequest,\r\n                              getProfileStatusRequest,\r\n                              isFetching,\r\n                              profileInfo,\r\n                              status,\r\n                              updateProfileStatusRequest,\r\n                              savePhoto,\r\n                              updateProfileRequest,\r\n                          }) => {\r\n    let userId = router.params.userId || sessionUserId;\r\n    useEffect(() => {\r\n        getProfileInfoRequest(userId);\r\n        getProfileStatusRequest(userId);\r\n    }, [getProfileInfoRequest, getProfileStatusRequest, userId])\r\n    return <>\r\n        {profileInfo == null ? <Preloader/> : <Profile\r\n                isOwner={!router.params.userId}\r\n                isFetching={isFetching}\r\n                profileInfo={profileInfo}\r\n                status={status}\r\n                getProfileStatusRequest={getProfileStatusRequest}\r\n                updateProfileStatusRequest={updateProfileStatusRequest}\r\n                router={router}\r\n                savePhoto={savePhoto}\r\n                updateProfileRequest={updateProfileRequest}\r\n            />}\r\n    </>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    profileInfo: getProfileInfo(state),\r\n    isFetching: getIsFetching(state),\r\n    status: getStatus(state),\r\n    sessionUserId: getUserId(state),\r\n})\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            getProfileInfoRequest,\r\n            getProfileStatusRequest,\r\n            updateProfileStatusRequest,\r\n            savePhoto,\r\n            updateProfileRequest\r\n        }\r\n    ),\r\n    withRouter,\r\n    withAuthNavigate,\r\n)(ProfileContainer);\r\n"],"names":["mapStateToProps","state","isAuth","auth","withAuthNavigate","Component","connect","props","router","params","userId","_jsx","_objectSpread","Navigate","to","_ref","isOwner","status","updateProfileStatusRequest","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","_useState4","localStatus","setLocalStatus","useEffect","toggleEditMode","children","autoFocus","onBlur","value","onChange","e","target","onDoubleClick","contactName","contactValue","_jsxs","className","classes","href","concat","savePhoto","profileInfo","onSubmit","onSavePhoto","currentTarget","files","profilePhoto","photos","large","userLocalPhoto","Formik","initialValues","values","_ref2","setSubmitting","setErrors","_ref3","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Form","type","apiError","src","alt","Field","name","component","placeholder","fullName","ProfileStatus","aboutMe","lookingForAJobDescription","Object","keys","contacts","map","key","_Fragment","Contact","lookingForAJob","updateProfileRequest","getProfileStatusRequest","onClick","ProfileUpdateForm","requestData","CurrentProfileInfo","message","likesCount","deletePost","id","validatePostText","error","length","AddNewPostForm","newPostBody","formControl","validate","postsData","addPost","postElements","p","Post","postsBlock","posts","profilePage","MyPosts","content","ProfileInfo","MyPostsContainer","getProfileInfo","getIsFetching","isFetching","getStatus","getUserId","compose","sessionUserId","getProfileInfoRequest","withRouter","Preloader","Profile"],"sourceRoot":""}