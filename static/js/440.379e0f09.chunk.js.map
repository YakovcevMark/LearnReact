{"version":3,"file":"static/js/440.379e0f09.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItems/DialogsItems.jsx","components/Dialogs/Messages/Messages.jsx","components/common/FormControls/AddNewMessageForm.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Hocs/withAuthNavigateComponent/withAuthNavigate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"items\":\"Dialogs_items__EV9NK\",\"dialogs\":\"Dialogs_dialogs__GkgHQ\",\"dialogItems\":\"Dialogs_dialogItems__5jCZl\",\"dialog\":\"Dialogs_dialog__C2e1p\",\"active\":\"Dialogs_active__kakGq\",\"messages\":\"Dialogs_messages__OpdpI\",\"message\":\"Dialogs_message__W3TP+\"};","import classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = ({id, name}) => {\r\n    const path = \"/dialogs/\" + id;\r\n    return <div className={classes.dialog}>\r\n        <NavLink to={path}> {name} </NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={classes.message}>\r\n        {props.message}\r\n    </div>\r\n\r\n}\r\n\r\nexport default Message;","import {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport classes from \"./FormControls.module.css\";\r\nfunction validateMessage(value){\r\n    let error;\r\n    if(value.length > 100) error = \"Max length is 100 symbols\";\r\n    return error;\r\n\r\n}\r\nexport const AddNewMessageForm = ({onSubmit}) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{newMessageBody: ''}}\r\n            onSubmit={(values,\r\n                       {setSubmitting}) => {\r\n                onSubmit(values.newMessageBody)\r\n                values.newMessageBody = '';\r\n            }\r\n            }\r\n        >\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n\r\n              }) => (\r\n                <Form>\r\n                    <div className={classes.formControl + \" \"\r\n                        + (touched.newMessageBody && errors.newMessageBody ?\r\n                            classes.error : \"\")}>\r\n                        <Field\r\n                            name=\"newMessageBody\"\r\n                            component=\"textarea\"\r\n                            placeholder=\"Write new message..\"\r\n                            value={values.newMessageBody}\r\n                            validate={validateMessage}\r\n                        />\r\n                        <div>\r\n                            {touched.newMessageBody && errors.newMessageBody &&\r\n                                <span>{errors.newMessageBody}</span>}\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"submit\">\r\n                        Submit\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}","import classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItems/DialogsItems\";\r\nimport Message from \"./Messages/Messages\";\r\nimport React from \"react\";\r\nimport {AddNewMessageForm} from \"../common/FormControls/AddNewMessageForm\";\r\n\r\nconst Dialogs = ({state, addMessage}) => {\r\n    const dialogsElements =\r\n        state.dialogsData.map(d => <DialogItem id={d.id} name={d.name}/>)\r\n    const messagesElements =\r\n        state.messagesData.map(m => <Message id={m.id} message={m.message}/>)\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesElements}\r\n                <AddNewMessageForm onSubmit={addMessage}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\r\nimport {addMessage} from \"../../redux/dialogs_page_reducer\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthNavigate} from \"../Hocs/withAuthNavigateComponent/withAuthNavigate\";\r\nimport withRouter from \"../Hocs/WithRouterComponent/WithRouterFunction\";\r\n\r\nfunction DialogsClass(props) {\r\n    return <Dialogs {...props} />\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        state: state.dialogsPage\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withRouter,\r\n    withAuthNavigate,\r\n)(DialogsClass)\r\n","import React from \"react\"\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport const withAuthNavigate = (Component) => {\r\n    const ComponentWithAuthNavigate = (props) => {\r\n        if(!props.isAuth && !props.router.params.userId) return <Navigate to=\"/login/\"/>\r\n        return <Component {...props}/>\r\n    }\r\n    return connect(mapStateToProps,null)(ComponentWithAuthNavigate);\r\n}\r\n\r\n"],"names":["_ref","id","name","path","_jsx","className","classes","children","_jsxs","NavLink","to","props","message","validateMessage","value","error","length","AddNewMessageForm","onSubmit","Formik","initialValues","newMessageBody","values","_ref2","setSubmitting","_ref3","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Form","formControl","Field","component","placeholder","validate","type","state","addMessage","dialogsElements","dialogsData","map","d","DialogItem","messagesElements","messagesData","m","Message","compose","connect","dialogsPage","withRouter","withAuthNavigate","Dialogs","_objectSpread","mapStateToProps","isAuth","auth","Component","router","params","userId","Navigate"],"sourceRoot":""}